import React, { useRef, useEffect, useState } from 'react';
import WaveSurfer from 'wavesurfer.js';

function AudioButton() {
    const waveformRef = useRef(null);
    const waveSurferRef = useRef(null);
    const [isPlaying, setIsPlaying] = useState(false);

    // Load sound files from assets
    const requireContext = require.context('../assets/sounds', false, /\.(mp3|wav)$/);
    const sounds = requireContext.keys().map(requireContext);

    // Initialize WaveSurfer instance on component mount
    useEffect(() => {
        waveSurferRef.current = WaveSurfer.create({
            container: waveformRef.current,
            waveColor: '#A8DBA8',
            progressColor: '#3B8686',
            height: 100,
            responsive: true,
            normalize: true,
            backend: 'MediaElement', // Ensure synchronization with audio
            cursorColor: 'transparent',
        });

        return () => {
            waveSurferRef.current.destroy();
        };
    }, []);

    // Function to play random audio with waveform animation
    const playRandomAudio = () => {
        const randomSound = sounds[Math.floor(Math.random() * sounds.length)];

        if (waveSurferRef.current.isPlaying()) {
            waveSurferRef.current.stop(); // Stop any current playback
        }

        // Load and play the new random sound
        waveSurferRef.current.load(randomSound);
        waveSurferRef.current.play();

        setIsPlaying(true);

        waveSurferRef.current.on('finish', () => {
            setIsPlaying(false);
        });
    };

    return (
        <div>
            <button className="button-34" role="button" onClick={playRandomAudio}>
                {isPlaying ? 'STOP' : 'PLAY QUOTE'}
            </button>
            <div ref={waveformRef}></div>
        </div>
    );
}

export default AudioButton;
